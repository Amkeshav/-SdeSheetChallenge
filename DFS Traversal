#include<bits/stdc++.h>
void dfs(vector<int>& t, vector<int>& vis, vector<int> adj[], int i)
{
    vis[i]=1;
    t.push_back(i);
    for(auto it:adj[i])
    {
        if(vis[it]==0)
        {
            dfs(t,vis,adj,it);
        }
    }
}
vector<vector<int>> depthFirstSearch(int V, int E, vector<vector<int>> &edges)
{
    vector<int> adj[V];
    for(int i=0;i<E;i++)
    {
        adj[edges[i][0]].push_back(edges[i][1]);
        adj[edges[i][1]].push_back(edges[i][0]);
    }
    vector<int>vis(V,0);
    vector<vector<int>>res;
    for(int i=0;i<V;i++)
    {
        if(!vis[i])
        {
            vector<int>t;
            dfs(t,vis,adj,i);
            sort(t.begin(),t.end());
            res.push_back(t);
        }
    }
    return res;
}
