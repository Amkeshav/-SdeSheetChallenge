#include<bits/stdc++.h>
vector<int> bfs(vector<int> adj[], vector<int>& degree)
{
    vector<int>v;
    queue<int>q;
    for(int i=0;i<degree.size();i++)
    {
        if(!degree[i])
        q.push(i);
    }
    while(!q.empty())
    {
        int c=q.front();
        v.push_back(c);
        q.pop();
        for(auto it:adj[c])
        {
            degree[it]--;
            if(!degree[it])
            q.push(it);
        }
    }
    return v;
}
vector<int> topologicalSort(vector<vector<int>> &edges, int v, int e)  {
    vector<int> adj[v];
    for(int i=0;i<e;i++)
    {
        adj[edges[i][0]].push_back(edges[i][1]);
    }
    vector<int>degree(v,0);
    for(int i=0;i<v;i++)
    {
        for(auto it:adj[i])
        {
            degree[it]++;
        }
    }
    return bfs(adj,degree);
}
