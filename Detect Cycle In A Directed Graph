#include<bits/stdc++.h>
int dfs(vector<int>& vis1, vector<int>& vis2, int i, vector<int> adj[])
{
    vis1[i]=1;
    vis2[i]=1;
    for(auto it:adj[i])
    {
        if(!vis1[it])
        {
            if(dfs(vis1,vis2,it,adj))
            return true;
        }
        else if(vis2[it])
        return true;
    }
    vis2[i]=0;
    return false;
}
int detectCycleInDirectedGraph(int n, vector < pair < int, int >> & edges) {
    vector<int>vis1(n+1,0);
    vector<int>vis2(n+1,0);
    vector<int> adj[n+1];
    for(int i=0;i<edges.size();i++)
    {
        int u=edges[i].first;
        int v=edges[i].second;
        adj[u].push_back(v);
    }
    for(int i=1;i<=n;i++)
    {
        if(!vis1[i])
        {
            if(dfs(vis1,vis2,i,adj))
            return true;
        }
    }
    return false;
}
