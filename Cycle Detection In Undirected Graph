#include<bits/stdc++.h>
bool dfs_cycle(int i, int p, vector<int> &vis, vector<int> adj[])
{
    vis[i]=1;
    for(auto it:adj[i])
    {
        if(!vis[it])
        {
            if(dfs_cycle(it,i,vis,adj))
            return true;
        }
        else if(it!=p)
        return true;
    }
    return false;
}
string cycleDetection (vector<vector<int>>& edges, int n, int m)
{
    vector<int> adj[n+1];
    for(int i=0;i<m;i++)
    {
        int u=edges[i][0];
        int v=edges[i][1];
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    vector<int> vis(n+1,0);
    for(int i=1;i<=n;i++)
    {
        if(!vis[i])
        {
            if(dfs_cycle(i,-1,vis,adj))
            return "Yes";
        }
    }
    return "No";
}
