/*****************************************************

    Following is the Binary Tree node structure:
    
    class BinaryTreeNode {
        public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
        
        ~BinaryTreeNode() {
            if(left) 
                delete left;
            if(right) 
                delete right;
        }
    };

******************************************************/

bool fun(BinaryTreeNode<int>* root1, BinaryTreeNode<int>* root2)
{
    if(root1==NULL && root2==NULL)
    return true;
    else if(root1==NULL || root2==NULL)
    return false;
    else
    {
        bool x=fun(root1->left,root2->right), y=false;
        if(x)
        y=fun(root1->right,root2->left);
        if(x && y && root1->data==root2->data)
        return true;
        else
        return false;
    }
}
bool isSymmetric(BinaryTreeNode<int>* root)
{
    return fun(root,root); 
}
